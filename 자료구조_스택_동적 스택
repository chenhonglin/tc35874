#include "pch.h"
#include <stdio.h>
#include <stdlib.h>

#define MAX_STACK_SIZE 100

typedef int element;
typedef struct {
	element *data;
	int capacity; //현재크기
	int top;
}stacktype;

//스택 생성 함수
void init_stack(stacktype *s) {
	s->top = -1;
	s->capacity = 1;
	s->data = (element*)malloc(s->capacity * sizeof(element));
}

//공백 상태 검출 함수
int empty(stacktype *s) {
	return (s->top == -1);
}

int full(stacktype *s) {
	return (s->top == (MAX_STACK_SIZE - 1));
}

void push(stacktype *s, element item) {
	if (full(s)) {
		s->capacity *= 2;
		s->data = (element*)realloc(s->data, s->capacity * sizeof(element));
	}
	s->data[++(s->top)] = item;
}

element pop(stacktype *s) {
	if (empty(s)) {
		printf("스택 공백 에러\n");
		exit(1);
	}
	else return s->data[(s->top)--];
}
int main() {
	
	stacktype s;
	init_stack(&s);
	push(&s, 10);
	push(&s, 20);
	push(&s, 30);
	printf("%d\n", pop(&s));
	printf("%d\n", pop(&s));
	printf("%d\n", pop(&s));

	free(s.data);

	return 0;
	
}
